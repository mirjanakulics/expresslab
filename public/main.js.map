{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>ExpressShop</h1>\\n<nav>\\n  <a href=\\\"\\\">Home</a>\\n  <a href=\\\"\\\">Profile</a>\\n  <a href=\\\"\\\">Sign Up</a>\\n  <a href=\\\"\\\">About</a>\\n</nav>\\n\\n<h2>Shopping Cart</h2>\\n\\n<form #cartForm=\\\"ngForm\\\" (ngSubmit)=\\\"addItem(cartForm)\\\">\\n  <label for=\\\"\\\">Product</label>\\n  <input type=\\\"text\\\" ngModel name=\\\"product\\\">\\n\\n  <label for=\\\"\\\">Price</label>\\n  <input type=\\\"text\\\" ngModel name=\\\"price\\\">\\n\\n  <label for=\\\"\\\">Quantity</label>\\n  <input type=\\\"text\\\" ngModel name=\\\"quantity\\\">\\n\\n  <button>Add To Cart</button>\\n</form>\\n\\n<div *ngFor=\\\"let item of cartitems,index as i\\\">\\n  <p>{{ item.id }}</p>\\n  <p>{{ item.product }}</p>\\n  <p>{{ item.price }}</p>\\n  <p>{{ item.quantity }}</p>\\n  <button (click)=\\\"deleteItem(item.id)\\\">X</button>\\n  <button (click)=\\\"toggleForm(i)\\\">Edit</button>\\n\\n  <form *ngIf=\\\"item.beingUpdated\\\" #updateForm=\\\"ngForm\\\" (ngSubmit)=\\\"[updateItem(item), toggleForm(i)]\\\">\\n    <label for=\\\"\\\">Product</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"item.product\\\" name=\\\"product\\\">\\n\\n    <label for=\\\"\\\">Price</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"item.price\\\" name=\\\"price\\\">\\n\\n    <label for=\\\"\\\">Quantity</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"item.quantity\\\" name=\\\"quantity\\\">\\n\\n    <button>Save Item</button>\\n  </form>\\n\\n</div>\"","import { Component } from '@angular/core';\nimport { CartServiceService } from './cart-service.service';\nimport { Subscriber } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  cartitems: any;\n  shouldBeHidden: boolean = true;\n\n  constructor(private service: CartServiceService) {\n    this.service.getAllItems().subscribe(response => {\n      this.cartitems = response;\n    });\n  }\n\n  toggleForm(index) {\n    this.cartitems[index].beingUpdated = !this.cartitems[index].beingUpdated;\n    console.log(this.cartitems);\n    this.shouldBeHidden = !this.shouldBeHidden;\n  }\n\n  addItem(form) {\n    console.log(form);\n    this.service.addItem({\n      ...form.value\n    }).subscribe(response => {\n      this.cartitems = response;\n    });\n  }\n\n  deleteItem(id) {\n    this.service.deleteItem(id).subscribe(response => {\n      this.cartitems = response;\n    });\n  }\n\n  updateItem(item) {\n    this.service.updateItem(item).subscribe(response => {\n      this.cartitems = response;\n    });\n  }                \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { CartServiceService } from './cart-service.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [CartServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CartServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllItems() {\n    return this.http.get(\"/api/cart-items\", { responseType: \"json\"});\n  }\n\n  addItem(newProduct) {\n    return this.http.post(\"/api/cart-items\", newProduct, { responseType: \"json\"});\n  }\n\n  deleteItem(id) {\n    return this.http.delete(`/api/cart-items/${id}`, { responseType: \"json\"});\n  }\n\n  updateItem(item) {\n    return this.http.put(`/api/cart-items/${item.id}`, item , { responseType: \"json\"});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}